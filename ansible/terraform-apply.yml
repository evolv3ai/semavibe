---
- name: Provision OCI Infrastructure with Terraform
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    terraform_dir: "{{ playbook_dir }}/../infra/terraform"
  
  tasks:
    - name: Debug playbook directory
      debug:
        msg: "Playbook directory is: {{ playbook_dir }}"
    
    - name: Debug terraform directory path
      debug:
        msg: "Terraform directory path is: {{ terraform_dir }}"
    
    - name: List contents of playbook directory
      command: ls -la
      args:
        chdir: "{{ playbook_dir }}"
      register: playbook_contents
      
    - name: Show playbook directory contents
      debug:
        var: playbook_contents.stdout_lines
    
    - name: List contents of parent directory
      command: ls -la
      args:
        chdir: "{{ playbook_dir }}/.."
      register: parent_contents
      
    - name: Show parent directory contents
      debug:
        var: parent_contents.stdout_lines
    
    - name: Check if terraform directory exists
      stat:
        path: "{{ terraform_dir }}"
      register: terraform_dir_stat
      
    - name: Show terraform directory status
      debug:
        msg: "Terraform directory exists: {{ terraform_dir_stat.stat.exists }}"
    
    - name: Initialize Terraform
      command: terraform init -input=false
      args:
        chdir: "{{ terraform_dir }}"
      register: init_result
      when: terraform_dir_stat.stat.exists
      ignore_errors: yes
      
    - name: Show Terraform init output
      debug:
        var: init_result
      when: init_result is defined
        
    - name: Apply Terraform configuration
      command: terraform apply -auto-approve
      args:
        chdir: "{{ terraform_dir }}"
      register: apply_result
      when: 
        - terraform_dir_stat.stat.exists
        - init_result is defined
        - init_result.rc == 0
      ignore_errors: yes
      
    - name: Show Terraform apply output
      debug:
        var: apply_result
      when: apply_result is defined
        
    - name: Get instance IPs
      command: terraform output -json instance_public_ips
      args:
        chdir: "{{ terraform_dir }}"
      register: ips_output
      when: 
        - terraform_dir_stat.stat.exists
        - apply_result is defined
        - apply_result.rc == 0
      ignore_errors: yes
      
    - name: Display provisioned instance IPs
      debug:
        msg: "Instance IPs: {{ ips_output.stdout | default('No IPs found') }}"
      when: ips_output is defined